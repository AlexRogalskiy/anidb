/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */
declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;
    componentOnReady(done: (ele?: this) => void): void;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}

import 'ionicons';
import '@ionic/core';
import '@stencil/router';


import {
  AnimeCharacters as AnimeCharacters
} from './components/app-details/anime-characters/anime-characters';

declare global {
  interface HTMLAnimeCharactersElement extends AnimeCharacters, HTMLStencilElement {
  }
  var HTMLAnimeCharactersElement: {
    prototype: HTMLAnimeCharactersElement;
    new (): HTMLAnimeCharactersElement;
  };
  interface HTMLElementTagNameMap {
    "anime-characters": HTMLAnimeCharactersElement;
  }
  interface ElementTagNameMap {
    "anime-characters": HTMLAnimeCharactersElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "anime-characters": JSXElements.AnimeCharactersAttributes;
    }
  }
  namespace JSXElements {
    export interface AnimeCharactersAttributes extends HTMLAttributes {
      anime?: any;
      
    }
  }
}


import {
  AnimeDetails as AnimeDetails
} from './components/app-details/anime-details/anime-details';

declare global {
  interface HTMLAnimeDetailsElement extends AnimeDetails, HTMLStencilElement {
  }
  var HTMLAnimeDetailsElement: {
    prototype: HTMLAnimeDetailsElement;
    new (): HTMLAnimeDetailsElement;
  };
  interface HTMLElementTagNameMap {
    "anime-details": HTMLAnimeDetailsElement;
  }
  interface ElementTagNameMap {
    "anime-details": HTMLAnimeDetailsElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "anime-details": JSXElements.AnimeDetailsAttributes;
    }
  }
  namespace JSXElements {
    export interface AnimeDetailsAttributes extends HTMLAttributes {
      anime?: any;
      
    }
  }
}


import {
  AnimeGenres as AnimeGenres
} from './components/app-details/anime-genres/anime-genres';

declare global {
  interface HTMLAnimeGenresElement extends AnimeGenres, HTMLStencilElement {
  }
  var HTMLAnimeGenresElement: {
    prototype: HTMLAnimeGenresElement;
    new (): HTMLAnimeGenresElement;
  };
  interface HTMLElementTagNameMap {
    "anime-genres": HTMLAnimeGenresElement;
  }
  interface ElementTagNameMap {
    "anime-genres": HTMLAnimeGenresElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "anime-genres": JSXElements.AnimeGenresAttributes;
    }
  }
  namespace JSXElements {
    export interface AnimeGenresAttributes extends HTMLAttributes {
      genres?: any;
      
    }
  }
}


import {
  AnimeInfo as AnimeInfo
} from './components/app-details/anime-info/anime-info';

declare global {
  interface HTMLAnimeInfoElement extends AnimeInfo, HTMLStencilElement {
  }
  var HTMLAnimeInfoElement: {
    prototype: HTMLAnimeInfoElement;
    new (): HTMLAnimeInfoElement;
  };
  interface HTMLElementTagNameMap {
    "anime-info": HTMLAnimeInfoElement;
  }
  interface ElementTagNameMap {
    "anime-info": HTMLAnimeInfoElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "anime-info": JSXElements.AnimeInfoAttributes;
    }
  }
  namespace JSXElements {
    export interface AnimeInfoAttributes extends HTMLAttributes {
      anime?: any;
      
    }
  }
}


import {
  AnimeTrailer as AnimeTrailer
} from './components/app-details/anime-trailer/anime-trailer';

declare global {
  interface HTMLAnimeTrailerElement extends AnimeTrailer, HTMLStencilElement {
  }
  var HTMLAnimeTrailerElement: {
    prototype: HTMLAnimeTrailerElement;
    new (): HTMLAnimeTrailerElement;
  };
  interface HTMLElementTagNameMap {
    "anime-trailer": HTMLAnimeTrailerElement;
  }
  interface ElementTagNameMap {
    "anime-trailer": HTMLAnimeTrailerElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "anime-trailer": JSXElements.AnimeTrailerAttributes;
    }
  }
  namespace JSXElements {
    export interface AnimeTrailerAttributes extends HTMLAttributes {
      trailer?: any;
      
    }
  }
}


import {
  AppDetails as AppDetails
} from './components/app-details/app-details';

declare global {
  interface HTMLAppDetailsElement extends AppDetails, HTMLStencilElement {
  }
  var HTMLAppDetailsElement: {
    prototype: HTMLAppDetailsElement;
    new (): HTMLAppDetailsElement;
  };
  interface HTMLElementTagNameMap {
    "app-details": HTMLAppDetailsElement;
  }
  interface ElementTagNameMap {
    "app-details": HTMLAppDetailsElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "app-details": JSXElements.AppDetailsAttributes;
    }
  }
  namespace JSXElements {
    export interface AppDetailsAttributes extends HTMLAttributes {
      id?: string;
      
    }
  }
}


import {
  AppHome as AppHome
} from './components/app-home/app-home';

declare global {
  interface HTMLAppHomeElement extends AppHome, HTMLStencilElement {
  }
  var HTMLAppHomeElement: {
    prototype: HTMLAppHomeElement;
    new (): HTMLAppHomeElement;
  };
  interface HTMLElementTagNameMap {
    "app-home": HTMLAppHomeElement;
  }
  interface ElementTagNameMap {
    "app-home": HTMLAppHomeElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "app-home": JSXElements.AppHomeAttributes;
    }
  }
  namespace JSXElements {
    export interface AppHomeAttributes extends HTMLAttributes {
      
      
    }
  }
}


import {
  HomeItem as HomeItem
} from './components/app-home/home-item/home-item';

declare global {
  interface HTMLHomeItemElement extends HomeItem, HTMLStencilElement {
  }
  var HTMLHomeItemElement: {
    prototype: HTMLHomeItemElement;
    new (): HTMLHomeItemElement;
  };
  interface HTMLElementTagNameMap {
    "home-item": HTMLHomeItemElement;
  }
  interface ElementTagNameMap {
    "home-item": HTMLHomeItemElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "home-item": JSXElements.HomeItemAttributes;
    }
  }
  namespace JSXElements {
    export interface HomeItemAttributes extends HTMLAttributes {
      anime?: any;
      
    }
  }
}


import {
  LazyAvatar as LazyAvatar
} from './components/lazy-avatar/lazy-avatar';

declare global {
  interface HTMLLazyAvatarElement extends LazyAvatar, HTMLStencilElement {
  }
  var HTMLLazyAvatarElement: {
    prototype: HTMLLazyAvatarElement;
    new (): HTMLLazyAvatarElement;
  };
  interface HTMLElementTagNameMap {
    "lazy-avatar": HTMLLazyAvatarElement;
  }
  interface ElementTagNameMap {
    "lazy-avatar": HTMLLazyAvatarElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "lazy-avatar": JSXElements.LazyAvatarAttributes;
    }
  }
  namespace JSXElements {
    export interface LazyAvatarAttributes extends HTMLAttributes {
      alt?: string;
      src?: string;
      
    }
  }
}


import {
  LazyBanner as LazyBanner
} from './components/lazy-banner/lazy-banner';

declare global {
  interface HTMLLazyBannerElement extends LazyBanner, HTMLStencilElement {
  }
  var HTMLLazyBannerElement: {
    prototype: HTMLLazyBannerElement;
    new (): HTMLLazyBannerElement;
  };
  interface HTMLElementTagNameMap {
    "lazy-banner": HTMLLazyBannerElement;
  }
  interface ElementTagNameMap {
    "lazy-banner": HTMLLazyBannerElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "lazy-banner": JSXElements.LazyBannerAttributes;
    }
  }
  namespace JSXElements {
    export interface LazyBannerAttributes extends HTMLAttributes {
      alt?: string;
      src?: string;
      
    }
  }
}


import {
  LazyIframe as LazyIframe
} from './components/lazy-iframe/lazy-iframe';

declare global {
  interface HTMLLazyIframeElement extends LazyIframe, HTMLStencilElement {
  }
  var HTMLLazyIframeElement: {
    prototype: HTMLLazyIframeElement;
    new (): HTMLLazyIframeElement;
  };
  interface HTMLElementTagNameMap {
    "lazy-iframe": HTMLLazyIframeElement;
  }
  interface ElementTagNameMap {
    "lazy-iframe": HTMLLazyIframeElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "lazy-iframe": JSXElements.LazyIframeAttributes;
    }
  }
  namespace JSXElements {
    export interface LazyIframeAttributes extends HTMLAttributes {
      src?: string;
      title?: string;
      
    }
  }
}


import {
  LazyImg as LazyImg
} from './components/lazy-img/lazy-img';

declare global {
  interface HTMLLazyImgElement extends LazyImg, HTMLStencilElement {
  }
  var HTMLLazyImgElement: {
    prototype: HTMLLazyImgElement;
    new (): HTMLLazyImgElement;
  };
  interface HTMLElementTagNameMap {
    "lazy-img": HTMLLazyImgElement;
  }
  interface ElementTagNameMap {
    "lazy-img": HTMLLazyImgElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "lazy-img": JSXElements.LazyImgAttributes;
    }
  }
  namespace JSXElements {
    export interface LazyImgAttributes extends HTMLAttributes {
      alt?: string;
      src?: string;
      
    }
  }
}


import {
  MyApp as MyApp
} from './components/my-app/my-app';

declare global {
  interface HTMLMyAppElement extends MyApp, HTMLStencilElement {
  }
  var HTMLMyAppElement: {
    prototype: HTMLMyAppElement;
    new (): HTMLMyAppElement;
  };
  interface HTMLElementTagNameMap {
    "my-app": HTMLMyAppElement;
  }
  interface ElementTagNameMap {
    "my-app": HTMLMyAppElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "my-app": JSXElements.MyAppAttributes;
    }
  }
  namespace JSXElements {
    export interface MyAppAttributes extends HTMLAttributes {
      
      
    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }
